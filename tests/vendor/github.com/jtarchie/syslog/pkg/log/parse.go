
//line parse.rl:1
package syslog

import (
  "fmt"
  "time"
)


//line parse.go:12
var _syslog_rfc5424_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 3, 
	1, 4, 1, 5, 1, 6, 1, 7, 
	1, 8, 1, 9, 1, 10, 1, 11, 
	2, 0, 9, 2, 0, 11, 
}

var _syslog_rfc5424_key_offsets []int16 = []int16{
	0, 0, 1, 3, 6, 9, 10, 12, 
	15, 18, 19, 21, 24, 26, 29, 31, 
	34, 36, 39, 41, 48, 55, 62, 68, 
	74, 80, 86, 92, 98, 104, 110, 116, 
	122, 128, 134, 140, 146, 152, 158, 164, 
	170, 176, 182, 188, 194, 200, 206, 212, 
	218, 224, 230, 236, 242, 248, 249, 250, 
	251, 252, 254, 261, 268, 275, 282, 289, 
	296, 303, 310, 317, 324, 331, 338, 345, 
	352, 359, 366, 373, 380, 387, 394, 401, 
	408, 415, 422, 429, 436, 443, 450, 457, 
	464, 466, 469, 472, 475, 478, 481, 484, 
	487, 490, 493, 496, 499, 502, 505, 508, 
	511, 514, 517, 520, 523, 526, 529, 532, 
	535, 538, 541, 544, 547, 550, 553, 556, 
	557, 560, 563, 566, 569, 572, 575, 578, 
	581, 584, 587, 590, 593, 596, 599, 602, 
	605, 608, 611, 614, 617, 620, 623, 626, 
	629, 632, 635, 638, 641, 644, 647, 650, 
	653, 656, 659, 662, 665, 668, 671, 674, 
	677, 680, 683, 686, 689, 692, 695, 698, 
	701, 704, 707, 710, 713, 716, 719, 722, 
	725, 728, 731, 734, 737, 740, 743, 746, 
	749, 752, 755, 758, 761, 764, 767, 770, 
	773, 776, 779, 782, 785, 788, 791, 794, 
	797, 800, 803, 806, 809, 812, 815, 818, 
	821, 824, 827, 830, 833, 836, 839, 842, 
	845, 848, 851, 854, 857, 860, 863, 866, 
	869, 872, 875, 878, 881, 884, 887, 890, 
	893, 896, 899, 902, 905, 908, 911, 914, 
	917, 920, 923, 926, 929, 932, 935, 936, 
	939, 942, 945, 948, 951, 954, 957, 960, 
	963, 966, 969, 972, 975, 978, 981, 984, 
	987, 990, 993, 996, 999, 1002, 1005, 1008, 
	1011, 1014, 1017, 1020, 1023, 1026, 1029, 1032, 
	1035, 1038, 1041, 1044, 1047, 1050, 1053, 1056, 
	1059, 1062, 1065, 1068, 1071, 1074, 1075, 1078, 
	1081, 1084, 1087, 1090, 1093, 1096, 1099, 1102, 
	1105, 1108, 1111, 1114, 1117, 1120, 1123, 1126, 
	1129, 1132, 1135, 1138, 1141, 1144, 1147, 1150, 
	1153, 1156, 1159, 1162, 1165, 1168, 1171, 1174, 
	1177, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 
	1201, 1204, 1207, 1210, 1213, 1216, 1219, 1222, 
	1225, 1228, 1231, 1234, 1237, 1240, 1243, 1246, 
	1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270, 
	1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294, 
	1297, 1300, 1303, 1306, 1309, 1312, 1315, 1318, 
	1321, 1324, 1327, 1330, 1333, 1336, 1339, 1342, 
	1345, 1348, 1351, 1354, 1357, 1360, 1363, 1366, 
	1369, 1372, 1375, 1378, 1381, 1384, 1387, 1390, 
	1393, 1396, 1399, 1402, 1405, 1408, 1411, 1414, 
	1417, 1420, 1423, 1426, 1429, 1432, 1435, 1438, 
	1441, 1444, 1447, 1450, 1453, 1456, 1459, 1462, 
	1465, 1468, 1471, 1474, 1477, 1480, 1483, 1486, 
	1489, 1492, 1495, 1498, 1501, 1504, 1507, 1510, 
	1513, 1516, 1519, 1522, 1525, 1528, 1531, 1534, 
	1537, 1540, 1543, 1546, 1549, 1552, 1555, 1558, 
	1561, 1564, 1567, 1570, 1573, 1576, 1579, 1582, 
	1585, 1588, 1591, 1594, 1597, 1600, 1603, 1606, 
	1609, 1612, 1615, 1618, 1621, 1624, 1627, 1630, 
	1633, 1636, 1639, 1642, 1645, 1648, 1651, 1654, 
	1657, 1660, 1663, 1666, 1669, 1672, 1675, 1678, 
	1681, 1684, 1687, 1690, 1693, 1696, 1699, 1702, 
	1705, 1708, 1711, 1714, 1717, 1720, 1723, 1726, 
	1729, 1732, 1735, 1738, 1741, 1744, 1747, 1750, 
	1753, 1756, 1759, 1762, 1765, 1768, 1771, 1774, 
	1777, 1780, 1783, 1786, 1789, 1792, 1795, 1798, 
	1801, 1804, 1807, 1810, 1813, 1816, 1819, 1822, 
	1825, 1828, 1831, 1834, 1835, 1837, 1839, 1841, 
	1842, 1844, 1846, 1847, 1849, 1851, 1852, 1854, 
	1856, 1857, 1859, 1861, 1862, 1864, 1866, 1870, 
	1872, 1874, 1875, 1877, 1879, 1880, 1882, 1887, 
	1892, 1897, 1902, 1907, 1910, 1913, 1914, 1915, 
	1915, 
}

var _syslog_rfc5424_trans_keys []byte = []byte{
	60, 48, 57, 62, 48, 57, 62, 48, 
	57, 62, 49, 57, 32, 48, 57, 45, 
	48, 57, 32, 33, 126, 32, 33, 126, 
	33, 126, 32, 33, 126, 33, 126, 32, 
	33, 126, 33, 126, 32, 33, 126, 45, 
	91, 33, 35, 60, 62, 92, 94, 126, 
	32, 33, 93, 35, 60, 62, 126, 33, 
	35, 60, 62, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	33, 61, 35, 92, 94, 126, 33, 61, 
	35, 92, 94, 126, 33, 61, 35, 92, 
	94, 126, 33, 61, 35, 92, 94, 126, 
	61, 34, 34, 34, 32, 93, 32, 33, 
	93, 35, 60, 62, 126, 32, 33, 93, 
	35, 60, 62, 126, 32, 33, 93, 35, 
	60, 62, 126, 32, 33, 93, 35, 60, 
	62, 126, 32, 33, 93, 35, 60, 62, 
	126, 32, 33, 93, 35, 60, 62, 126, 
	32, 33, 93, 35, 60, 62, 126, 32, 
	33, 93, 35, 60, 62, 126, 32, 33, 
	93, 35, 60, 62, 126, 32, 33, 93, 
	35, 60, 62, 126, 32, 33, 93, 35, 
	60, 62, 126, 32, 33, 93, 35, 60, 
	62, 126, 32, 33, 93, 35, 60, 62, 
	126, 32, 33, 93, 35, 60, 62, 126, 
	32, 33, 93, 35, 60, 62, 126, 32, 
	33, 93, 35, 60, 62, 126, 32, 33, 
	93, 35, 60, 62, 126, 32, 33, 93, 
	35, 60, 62, 126, 32, 33, 93, 35, 
	60, 62, 126, 32, 33, 93, 35, 60, 
	62, 126, 32, 33, 93, 35, 60, 62, 
	126, 32, 33, 93, 35, 60, 62, 126, 
	32, 33, 93, 35, 60, 62, 126, 32, 
	33, 93, 35, 60, 62, 126, 32, 33, 
	93, 35, 60, 62, 126, 32, 33, 93, 
	35, 60, 62, 126, 32, 33, 93, 35, 
	60, 62, 126, 32, 33, 93, 35, 60, 
	62, 126, 32, 33, 93, 35, 60, 62, 
	126, 32, 33, 93, 35, 60, 62, 126, 
	32, 93, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 33, 126, 32, 33, 126, 
	32, 33, 126, 32, 33, 126, 32, 33, 
	126, 32, 33, 126, 32, 33, 126, 32, 
	33, 126, 32, 48, 57, 48, 57, 48, 
	57, 45, 48, 57, 48, 57, 45, 48, 
	57, 48, 57, 84, 48, 57, 48, 57, 
	58, 48, 57, 48, 57, 58, 48, 57, 
	48, 57, 43, 45, 46, 90, 48, 57, 
	48, 57, 58, 48, 57, 48, 57, 32, 
	48, 57, 43, 45, 90, 48, 57, 43, 
	45, 90, 48, 57, 43, 45, 90, 48, 
	57, 43, 45, 90, 48, 57, 43, 45, 
	90, 48, 57, 43, 45, 90, 32, 48, 
	57, 32, 32, 
}

var _syslog_rfc5424_single_lengths []byte = []byte{
	0, 1, 0, 1, 1, 1, 0, 1, 
	1, 1, 0, 1, 0, 1, 0, 1, 
	0, 1, 2, 1, 3, 1, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 1, 1, 1, 
	1, 2, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	1, 0, 0, 1, 0, 0, 4, 0, 
	0, 1, 0, 0, 1, 0, 3, 3, 
	3, 3, 3, 3, 1, 1, 1, 0, 
	0, 
}

var _syslog_rfc5424_range_lengths []byte = []byte{
	0, 0, 1, 1, 1, 0, 1, 1, 
	1, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 3, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 0, 0, 0, 
	0, 0, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 1, 1, 
	0, 1, 1, 0, 1, 1, 0, 1, 
	1, 0, 1, 1, 0, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 0, 0, 
	0, 
}

var _syslog_rfc5424_index_offsets []int16 = []int16{
	0, 0, 2, 4, 7, 10, 12, 14, 
	17, 20, 22, 24, 27, 29, 32, 34, 
	37, 39, 42, 45, 50, 56, 61, 66, 
	71, 76, 81, 86, 91, 96, 101, 106, 
	111, 116, 121, 126, 131, 136, 141, 146, 
	151, 156, 161, 166, 171, 176, 181, 186, 
	191, 196, 201, 206, 211, 216, 218, 220, 
	222, 224, 227, 233, 239, 245, 251, 257, 
	263, 269, 275, 281, 287, 293, 299, 305, 
	311, 317, 323, 329, 335, 341, 347, 353, 
	359, 365, 371, 377, 383, 389, 395, 401, 
	407, 410, 413, 416, 419, 422, 425, 428, 
	431, 434, 437, 440, 443, 446, 449, 452, 
	455, 458, 461, 464, 467, 470, 473, 476, 
	479, 482, 485, 488, 491, 494, 497, 500, 
	502, 505, 508, 511, 514, 517, 520, 523, 
	526, 529, 532, 535, 538, 541, 544, 547, 
	550, 553, 556, 559, 562, 565, 568, 571, 
	574, 577, 580, 583, 586, 589, 592, 595, 
	598, 601, 604, 607, 610, 613, 616, 619, 
	622, 625, 628, 631, 634, 637, 640, 643, 
	646, 649, 652, 655, 658, 661, 664, 667, 
	670, 673, 676, 679, 682, 685, 688, 691, 
	694, 697, 700, 703, 706, 709, 712, 715, 
	718, 721, 724, 727, 730, 733, 736, 739, 
	742, 745, 748, 751, 754, 757, 760, 763, 
	766, 769, 772, 775, 778, 781, 784, 787, 
	790, 793, 796, 799, 802, 805, 808, 811, 
	814, 817, 820, 823, 826, 829, 832, 835, 
	838, 841, 844, 847, 850, 853, 856, 859, 
	862, 865, 868, 871, 874, 877, 880, 882, 
	885, 888, 891, 894, 897, 900, 903, 906, 
	909, 912, 915, 918, 921, 924, 927, 930, 
	933, 936, 939, 942, 945, 948, 951, 954, 
	957, 960, 963, 966, 969, 972, 975, 978, 
	981, 984, 987, 990, 993, 996, 999, 1002, 
	1005, 1008, 1011, 1014, 1017, 1020, 1022, 1025, 
	1028, 1031, 1034, 1037, 1040, 1043, 1046, 1049, 
	1052, 1055, 1058, 1061, 1064, 1067, 1070, 1073, 
	1076, 1079, 1082, 1085, 1088, 1091, 1094, 1097, 
	1100, 1103, 1106, 1109, 1112, 1115, 1118, 1121, 
	1124, 1127, 1130, 1133, 1136, 1139, 1142, 1145, 
	1148, 1151, 1154, 1157, 1160, 1163, 1166, 1169, 
	1172, 1175, 1178, 1181, 1184, 1187, 1190, 1193, 
	1196, 1199, 1202, 1205, 1208, 1211, 1214, 1217, 
	1220, 1223, 1226, 1229, 1232, 1235, 1238, 1241, 
	1244, 1247, 1250, 1253, 1256, 1259, 1262, 1265, 
	1268, 1271, 1274, 1277, 1280, 1283, 1286, 1289, 
	1292, 1295, 1298, 1301, 1304, 1307, 1310, 1313, 
	1316, 1319, 1322, 1325, 1328, 1331, 1334, 1337, 
	1340, 1343, 1346, 1349, 1352, 1355, 1358, 1361, 
	1364, 1367, 1370, 1373, 1376, 1379, 1382, 1385, 
	1388, 1391, 1394, 1397, 1400, 1403, 1406, 1409, 
	1412, 1415, 1418, 1421, 1424, 1427, 1430, 1433, 
	1436, 1439, 1442, 1445, 1448, 1451, 1454, 1457, 
	1460, 1463, 1466, 1469, 1472, 1475, 1478, 1481, 
	1484, 1487, 1490, 1493, 1496, 1499, 1502, 1505, 
	1508, 1511, 1514, 1517, 1520, 1523, 1526, 1529, 
	1532, 1535, 1538, 1541, 1544, 1547, 1550, 1553, 
	1556, 1559, 1562, 1565, 1568, 1571, 1574, 1577, 
	1580, 1583, 1586, 1589, 1592, 1595, 1598, 1601, 
	1604, 1607, 1610, 1613, 1616, 1619, 1622, 1625, 
	1628, 1631, 1634, 1637, 1640, 1643, 1646, 1649, 
	1652, 1655, 1658, 1661, 1664, 1667, 1670, 1673, 
	1676, 1679, 1682, 1685, 1688, 1691, 1694, 1697, 
	1700, 1703, 1706, 1709, 1712, 1715, 1718, 1721, 
	1724, 1727, 1730, 1733, 1736, 1739, 1742, 1745, 
	1748, 1751, 1754, 1757, 1760, 1763, 1766, 1769, 
	1772, 1775, 1778, 1781, 1783, 1785, 1787, 1789, 
	1791, 1793, 1795, 1797, 1799, 1801, 1803, 1805, 
	1807, 1809, 1811, 1813, 1815, 1817, 1819, 1824, 
	1826, 1828, 1830, 1832, 1834, 1836, 1838, 1843, 
	1848, 1853, 1858, 1863, 1867, 1870, 1872, 1874, 
	1875, 
}

var _syslog_rfc5424_indicies []int16 = []int16{
	0, 1, 2, 1, 4, 3, 1, 4, 
	5, 1, 4, 1, 6, 1, 7, 8, 
	1, 9, 10, 1, 11, 1, 12, 1, 
	13, 14, 1, 15, 1, 16, 17, 1, 
	18, 1, 19, 20, 1, 21, 1, 22, 
	23, 1, 24, 25, 1, 26, 26, 26, 
	26, 1, 27, 28, 29, 28, 28, 1, 
	30, 30, 30, 30, 1, 31, 32, 31, 
	31, 1, 33, 32, 33, 33, 1, 34, 
	32, 34, 34, 1, 35, 32, 35, 35, 
	1, 36, 32, 36, 36, 1, 37, 32, 
	37, 37, 1, 38, 32, 38, 38, 1, 
	39, 32, 39, 39, 1, 40, 32, 40, 
	40, 1, 41, 32, 41, 41, 1, 42, 
	32, 42, 42, 1, 43, 32, 43, 43, 
	1, 44, 32, 44, 44, 1, 45, 32, 
	45, 45, 1, 46, 32, 46, 46, 1, 
	47, 32, 47, 47, 1, 48, 32, 48, 
	48, 1, 49, 32, 49, 49, 1, 50, 
	32, 50, 50, 1, 51, 32, 51, 51, 
	1, 52, 32, 52, 52, 1, 53, 32, 
	53, 53, 1, 54, 32, 54, 54, 1, 
	55, 32, 55, 55, 1, 56, 32, 56, 
	56, 1, 57, 32, 57, 57, 1, 58, 
	32, 58, 58, 1, 59, 32, 59, 59, 
	1, 60, 32, 60, 60, 1, 61, 32, 
	61, 61, 1, 62, 32, 62, 62, 1, 
	32, 1, 63, 1, 65, 64, 67, 66, 
	68, 24, 1, 27, 69, 29, 69, 69, 
	1, 27, 70, 29, 70, 70, 1, 27, 
	71, 29, 71, 71, 1, 27, 72, 29, 
	72, 72, 1, 27, 73, 29, 73, 73, 
	1, 27, 74, 29, 74, 74, 1, 27, 
	75, 29, 75, 75, 1, 27, 76, 29, 
	76, 76, 1, 27, 77, 29, 77, 77, 
	1, 27, 78, 29, 78, 78, 1, 27, 
	79, 29, 79, 79, 1, 27, 80, 29, 
	80, 80, 1, 27, 81, 29, 81, 81, 
	1, 27, 82, 29, 82, 82, 1, 27, 
	83, 29, 83, 83, 1, 27, 84, 29, 
	84, 84, 1, 27, 85, 29, 85, 85, 
	1, 27, 86, 29, 86, 86, 1, 27, 
	87, 29, 87, 87, 1, 27, 88, 29, 
	88, 88, 1, 27, 89, 29, 89, 89, 
	1, 27, 90, 29, 90, 90, 1, 27, 
	91, 29, 91, 91, 1, 27, 92, 29, 
	92, 92, 1, 27, 93, 29, 93, 93, 
	1, 27, 94, 29, 94, 94, 1, 27, 
	95, 29, 95, 95, 1, 27, 96, 29, 
	96, 96, 1, 27, 97, 29, 97, 97, 
	1, 27, 98, 29, 98, 98, 1, 27, 
	29, 1, 22, 99, 1, 22, 100, 1, 
	22, 101, 1, 22, 102, 1, 22, 103, 
	1, 22, 104, 1, 22, 105, 1, 22, 
	106, 1, 22, 107, 1, 22, 108, 1, 
	22, 109, 1, 22, 110, 1, 22, 111, 
	1, 22, 112, 1, 22, 113, 1, 22, 
	114, 1, 22, 115, 1, 22, 116, 1, 
	22, 117, 1, 22, 118, 1, 22, 119, 
	1, 22, 120, 1, 22, 121, 1, 22, 
	122, 1, 22, 123, 1, 22, 124, 1, 
	22, 125, 1, 22, 126, 1, 22, 127, 
	1, 22, 128, 1, 22, 1, 19, 129, 
	1, 19, 130, 1, 19, 131, 1, 19, 
	132, 1, 19, 133, 1, 19, 134, 1, 
	19, 135, 1, 19, 136, 1, 19, 137, 
	1, 19, 138, 1, 19, 139, 1, 19, 
	140, 1, 19, 141, 1, 19, 142, 1, 
	19, 143, 1, 19, 144, 1, 19, 145, 
	1, 19, 146, 1, 19, 147, 1, 19, 
	148, 1, 19, 149, 1, 19, 150, 1, 
	19, 151, 1, 19, 152, 1, 19, 153, 
	1, 19, 154, 1, 19, 155, 1, 19, 
	156, 1, 19, 157, 1, 19, 158, 1, 
	19, 159, 1, 19, 160, 1, 19, 161, 
	1, 19, 162, 1, 19, 163, 1, 19, 
	164, 1, 19, 165, 1, 19, 166, 1, 
	19, 167, 1, 19, 168, 1, 19, 169, 
	1, 19, 170, 1, 19, 171, 1, 19, 
	172, 1, 19, 173, 1, 19, 174, 1, 
	19, 175, 1, 19, 176, 1, 19, 177, 
	1, 19, 178, 1, 19, 179, 1, 19, 
	180, 1, 19, 181, 1, 19, 182, 1, 
	19, 183, 1, 19, 184, 1, 19, 185, 
	1, 19, 186, 1, 19, 187, 1, 19, 
	188, 1, 19, 189, 1, 19, 190, 1, 
	19, 191, 1, 19, 192, 1, 19, 193, 
	1, 19, 194, 1, 19, 195, 1, 19, 
	196, 1, 19, 197, 1, 19, 198, 1, 
	19, 199, 1, 19, 200, 1, 19, 201, 
	1, 19, 202, 1, 19, 203, 1, 19, 
	204, 1, 19, 205, 1, 19, 206, 1, 
	19, 207, 1, 19, 208, 1, 19, 209, 
	1, 19, 210, 1, 19, 211, 1, 19, 
	212, 1, 19, 213, 1, 19, 214, 1, 
	19, 215, 1, 19, 216, 1, 19, 217, 
	1, 19, 218, 1, 19, 219, 1, 19, 
	220, 1, 19, 221, 1, 19, 222, 1, 
	19, 223, 1, 19, 224, 1, 19, 225, 
	1, 19, 226, 1, 19, 227, 1, 19, 
	228, 1, 19, 229, 1, 19, 230, 1, 
	19, 231, 1, 19, 232, 1, 19, 233, 
	1, 19, 234, 1, 19, 235, 1, 19, 
	236, 1, 19, 237, 1, 19, 238, 1, 
	19, 239, 1, 19, 240, 1, 19, 241, 
	1, 19, 242, 1, 19, 243, 1, 19, 
	244, 1, 19, 245, 1, 19, 246, 1, 
	19, 247, 1, 19, 248, 1, 19, 249, 
	1, 19, 250, 1, 19, 251, 1, 19, 
	252, 1, 19, 253, 1, 19, 254, 1, 
	19, 1, 16, 255, 1, 16, 256, 1, 
	16, 257, 1, 16, 258, 1, 16, 259, 
	1, 16, 260, 1, 16, 261, 1, 16, 
	262, 1, 16, 263, 1, 16, 264, 1, 
	16, 265, 1, 16, 266, 1, 16, 267, 
	1, 16, 268, 1, 16, 269, 1, 16, 
	270, 1, 16, 271, 1, 16, 272, 1, 
	16, 273, 1, 16, 274, 1, 16, 275, 
	1, 16, 276, 1, 16, 277, 1, 16, 
	278, 1, 16, 279, 1, 16, 280, 1, 
	16, 281, 1, 16, 282, 1, 16, 283, 
	1, 16, 284, 1, 16, 285, 1, 16, 
	286, 1, 16, 287, 1, 16, 288, 1, 
	16, 289, 1, 16, 290, 1, 16, 291, 
	1, 16, 292, 1, 16, 293, 1, 16, 
	294, 1, 16, 295, 1, 16, 296, 1, 
	16, 297, 1, 16, 298, 1, 16, 299, 
	1, 16, 300, 1, 16, 1, 13, 301, 
	1, 13, 302, 1, 13, 303, 1, 13, 
	304, 1, 13, 305, 1, 13, 306, 1, 
	13, 307, 1, 13, 308, 1, 13, 309, 
	1, 13, 310, 1, 13, 311, 1, 13, 
	312, 1, 13, 313, 1, 13, 314, 1, 
	13, 315, 1, 13, 316, 1, 13, 317, 
	1, 13, 318, 1, 13, 319, 1, 13, 
	320, 1, 13, 321, 1, 13, 322, 1, 
	13, 323, 1, 13, 324, 1, 13, 325, 
	1, 13, 326, 1, 13, 327, 1, 13, 
	328, 1, 13, 329, 1, 13, 330, 1, 
	13, 331, 1, 13, 332, 1, 13, 333, 
	1, 13, 334, 1, 13, 335, 1, 13, 
	336, 1, 13, 337, 1, 13, 338, 1, 
	13, 339, 1, 13, 340, 1, 13, 341, 
	1, 13, 342, 1, 13, 343, 1, 13, 
	344, 1, 13, 345, 1, 13, 346, 1, 
	13, 347, 1, 13, 348, 1, 13, 349, 
	1, 13, 350, 1, 13, 351, 1, 13, 
	352, 1, 13, 353, 1, 13, 354, 1, 
	13, 355, 1, 13, 356, 1, 13, 357, 
	1, 13, 358, 1, 13, 359, 1, 13, 
	360, 1, 13, 361, 1, 13, 362, 1, 
	13, 363, 1, 13, 364, 1, 13, 365, 
	1, 13, 366, 1, 13, 367, 1, 13, 
	368, 1, 13, 369, 1, 13, 370, 1, 
	13, 371, 1, 13, 372, 1, 13, 373, 
	1, 13, 374, 1, 13, 375, 1, 13, 
	376, 1, 13, 377, 1, 13, 378, 1, 
	13, 379, 1, 13, 380, 1, 13, 381, 
	1, 13, 382, 1, 13, 383, 1, 13, 
	384, 1, 13, 385, 1, 13, 386, 1, 
	13, 387, 1, 13, 388, 1, 13, 389, 
	1, 13, 390, 1, 13, 391, 1, 13, 
	392, 1, 13, 393, 1, 13, 394, 1, 
	13, 395, 1, 13, 396, 1, 13, 397, 
	1, 13, 398, 1, 13, 399, 1, 13, 
	400, 1, 13, 401, 1, 13, 402, 1, 
	13, 403, 1, 13, 404, 1, 13, 405, 
	1, 13, 406, 1, 13, 407, 1, 13, 
	408, 1, 13, 409, 1, 13, 410, 1, 
	13, 411, 1, 13, 412, 1, 13, 413, 
	1, 13, 414, 1, 13, 415, 1, 13, 
	416, 1, 13, 417, 1, 13, 418, 1, 
	13, 419, 1, 13, 420, 1, 13, 421, 
	1, 13, 422, 1, 13, 423, 1, 13, 
	424, 1, 13, 425, 1, 13, 426, 1, 
	13, 427, 1, 13, 428, 1, 13, 429, 
	1, 13, 430, 1, 13, 431, 1, 13, 
	432, 1, 13, 433, 1, 13, 434, 1, 
	13, 435, 1, 13, 436, 1, 13, 437, 
	1, 13, 438, 1, 13, 439, 1, 13, 
	440, 1, 13, 441, 1, 13, 442, 1, 
	13, 443, 1, 13, 444, 1, 13, 445, 
	1, 13, 446, 1, 13, 447, 1, 13, 
	448, 1, 13, 449, 1, 13, 450, 1, 
	13, 451, 1, 13, 452, 1, 13, 453, 
	1, 13, 454, 1, 13, 455, 1, 13, 
	456, 1, 13, 457, 1, 13, 458, 1, 
	13, 459, 1, 13, 460, 1, 13, 461, 
	1, 13, 462, 1, 13, 463, 1, 13, 
	464, 1, 13, 465, 1, 13, 466, 1, 
	13, 467, 1, 13, 468, 1, 13, 469, 
	1, 13, 470, 1, 13, 471, 1, 13, 
	472, 1, 13, 473, 1, 13, 474, 1, 
	13, 475, 1, 13, 476, 1, 13, 477, 
	1, 13, 478, 1, 13, 479, 1, 13, 
	480, 1, 13, 481, 1, 13, 482, 1, 
	13, 483, 1, 13, 484, 1, 13, 485, 
	1, 13, 486, 1, 13, 487, 1, 13, 
	488, 1, 13, 489, 1, 13, 490, 1, 
	13, 491, 1, 13, 492, 1, 13, 493, 
	1, 13, 494, 1, 13, 495, 1, 13, 
	496, 1, 13, 497, 1, 13, 498, 1, 
	13, 499, 1, 13, 500, 1, 13, 501, 
	1, 13, 502, 1, 13, 503, 1, 13, 
	504, 1, 13, 505, 1, 13, 506, 1, 
	13, 507, 1, 13, 508, 1, 13, 509, 
	1, 13, 510, 1, 13, 511, 1, 13, 
	512, 1, 13, 513, 1, 13, 514, 1, 
	13, 515, 1, 13, 516, 1, 13, 517, 
	1, 13, 518, 1, 13, 519, 1, 13, 
	520, 1, 13, 521, 1, 13, 522, 1, 
	13, 523, 1, 13, 524, 1, 13, 525, 
	1, 13, 526, 1, 13, 527, 1, 13, 
	528, 1, 13, 529, 1, 13, 530, 1, 
	13, 531, 1, 13, 532, 1, 13, 533, 
	1, 13, 534, 1, 13, 535, 1, 13, 
	536, 1, 13, 537, 1, 13, 538, 1, 
	13, 539, 1, 13, 540, 1, 13, 541, 
	1, 13, 542, 1, 13, 543, 1, 13, 
	544, 1, 13, 545, 1, 13, 546, 1, 
	13, 547, 1, 13, 548, 1, 13, 549, 
	1, 13, 550, 1, 13, 551, 1, 13, 
	552, 1, 13, 553, 1, 13, 1, 554, 
	1, 555, 1, 556, 1, 557, 1, 558, 
	1, 559, 1, 560, 1, 561, 1, 562, 
	1, 563, 1, 564, 1, 565, 1, 566, 
	1, 567, 1, 568, 1, 569, 1, 570, 
	1, 571, 1, 572, 572, 573, 574, 1, 
	575, 1, 576, 1, 577, 1, 578, 1, 
	574, 1, 579, 1, 580, 1, 572, 572, 
	574, 581, 1, 572, 572, 574, 582, 1, 
	572, 572, 574, 583, 1, 572, 572, 574, 
	584, 1, 572, 572, 574, 585, 1, 572, 
	572, 574, 1, 7, 586, 1, 7, 1, 
	587, 1, 588, 589, 
}

var _syslog_rfc5424_trans_targs []int16 = []int16{
	2, 0, 3, 4, 6, 5, 7, 8, 
	580, 9, 548, 10, 11, 12, 294, 13, 
	14, 247, 15, 16, 120, 17, 18, 89, 
	582, 19, 20, 21, 58, 582, 22, 23, 
	54, 24, 25, 26, 27, 28, 29, 30, 
	31, 32, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 46, 
	47, 48, 49, 50, 51, 52, 53, 55, 
	56, 57, 56, 57, 21, 59, 60, 61, 
	62, 63, 64, 65, 66, 67, 68, 69, 
	70, 71, 72, 73, 74, 75, 76, 77, 
	78, 79, 80, 81, 82, 83, 84, 85, 
	86, 87, 88, 90, 91, 92, 93, 94, 
	95, 96, 97, 98, 99, 100, 101, 102, 
	103, 104, 105, 106, 107, 108, 109, 110, 
	111, 112, 113, 114, 115, 116, 117, 118, 
	119, 121, 122, 123, 124, 125, 126, 127, 
	128, 129, 130, 131, 132, 133, 134, 135, 
	136, 137, 138, 139, 140, 141, 142, 143, 
	144, 145, 146, 147, 148, 149, 150, 151, 
	152, 153, 154, 155, 156, 157, 158, 159, 
	160, 161, 162, 163, 164, 165, 166, 167, 
	168, 169, 170, 171, 172, 173, 174, 175, 
	176, 177, 178, 179, 180, 181, 182, 183, 
	184, 185, 186, 187, 188, 189, 190, 191, 
	192, 193, 194, 195, 196, 197, 198, 199, 
	200, 201, 202, 203, 204, 205, 206, 207, 
	208, 209, 210, 211, 212, 213, 214, 215, 
	216, 217, 218, 219, 220, 221, 222, 223, 
	224, 225, 226, 227, 228, 229, 230, 231, 
	232, 233, 234, 235, 236, 237, 238, 239, 
	240, 241, 242, 243, 244, 245, 246, 248, 
	249, 250, 251, 252, 253, 254, 255, 256, 
	257, 258, 259, 260, 261, 262, 263, 264, 
	265, 266, 267, 268, 269, 270, 271, 272, 
	273, 274, 275, 276, 277, 278, 279, 280, 
	281, 282, 283, 284, 285, 286, 287, 288, 
	289, 290, 291, 292, 293, 295, 296, 297, 
	298, 299, 300, 301, 302, 303, 304, 305, 
	306, 307, 308, 309, 310, 311, 312, 313, 
	314, 315, 316, 317, 318, 319, 320, 321, 
	322, 323, 324, 325, 326, 327, 328, 329, 
	330, 331, 332, 333, 334, 335, 336, 337, 
	338, 339, 340, 341, 342, 343, 344, 345, 
	346, 347, 348, 349, 350, 351, 352, 353, 
	354, 355, 356, 357, 358, 359, 360, 361, 
	362, 363, 364, 365, 366, 367, 368, 369, 
	370, 371, 372, 373, 374, 375, 376, 377, 
	378, 379, 380, 381, 382, 383, 384, 385, 
	386, 387, 388, 389, 390, 391, 392, 393, 
	394, 395, 396, 397, 398, 399, 400, 401, 
	402, 403, 404, 405, 406, 407, 408, 409, 
	410, 411, 412, 413, 414, 415, 416, 417, 
	418, 419, 420, 421, 422, 423, 424, 425, 
	426, 427, 428, 429, 430, 431, 432, 433, 
	434, 435, 436, 437, 438, 439, 440, 441, 
	442, 443, 444, 445, 446, 447, 448, 449, 
	450, 451, 452, 453, 454, 455, 456, 457, 
	458, 459, 460, 461, 462, 463, 464, 465, 
	466, 467, 468, 469, 470, 471, 472, 473, 
	474, 475, 476, 477, 478, 479, 480, 481, 
	482, 483, 484, 485, 486, 487, 488, 489, 
	490, 491, 492, 493, 494, 495, 496, 497, 
	498, 499, 500, 501, 502, 503, 504, 505, 
	506, 507, 508, 509, 510, 511, 512, 513, 
	514, 515, 516, 517, 518, 519, 520, 521, 
	522, 523, 524, 525, 526, 527, 528, 529, 
	530, 531, 532, 533, 534, 535, 536, 537, 
	538, 539, 540, 541, 542, 543, 544, 545, 
	546, 547, 549, 550, 551, 552, 553, 554, 
	555, 556, 557, 558, 559, 560, 561, 562, 
	563, 564, 565, 566, 567, 573, 572, 568, 
	569, 570, 571, 10, 574, 575, 576, 577, 
	578, 579, 581, 583, 584, 584, 
}

var _syslog_rfc5424_trans_actions []byte = []byte{
	0, 0, 1, 0, 5, 0, 1, 3, 
	0, 0, 1, 0, 1, 7, 0, 1, 
	9, 0, 1, 11, 0, 1, 13, 0, 
	0, 0, 1, 15, 0, 15, 1, 0, 
	17, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 25, 0, 19, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 21, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 
}

var _syslog_rfc5424_eof_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 28, 
	23, 
}

const syslog_rfc5424_start int = 1
const syslog_rfc5424_first_final int = 582
const syslog_rfc5424_error int = 0

const syslog_rfc5424_en_main int = 1


//line parse.rl:11


func bytesRef(a []byte) []byte {
  if len(a) == 1 && a[0] == '-' {
    return nil
  }
  return a
}

func atoi(a []byte) int {
  var x int
  for _, c := range a {
    x = x * 10 + int(c - '0')
  }
  return x
}

func atoi2(a []byte) int {
  return int(a[1] - '0') + int(a[0] - '0') * 10
}

func atoi4(a []byte) int {
  return int(a[3] - '0') +
  int(a[2] - '0') * 10 +
  int(a[1] - '0') * 100 +
  int(a[0] - '0') * 1000
}

func Parse(data []byte) (*Log, error) {
  var (
    paramName []byte
    nanosecond int
  )

  log := &Log{}

  // set defaults for state machine parsing
  cs, p, pe, eof := 0, 0, len(data), len(data)

  // use to keep track start of value
  mark := 0

  // taken directly from https://tools.ietf.org/html/rfc5424#page-8
  
//line parse.go:1092
	{
	cs = syslog_rfc5424_start
	}

//line parse.go:1097
	{
	var _klen int
	var _trans int
	var _acts int
	var _nacts uint
	var _keys int
	if p == pe {
		goto _test_eof
	}
	if cs == 0 {
		goto _out
	}
_resume:
	_keys = int(_syslog_rfc5424_key_offsets[cs])
	_trans = int(_syslog_rfc5424_index_offsets[cs])

	_klen = int(_syslog_rfc5424_single_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + _klen - 1)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + ((_upper - _lower) >> 1)
			switch {
			case data[p] < _syslog_rfc5424_trans_keys[_mid]:
				_upper = _mid - 1
			case data[p] > _syslog_rfc5424_trans_keys[_mid]:
				_lower = _mid + 1
			default:
				_trans += int(_mid - int(_keys))
				goto _match
			}
		}
		_keys += _klen
		_trans += _klen
	}

	_klen = int(_syslog_rfc5424_range_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + (_klen << 1) - 2)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + (((_upper - _lower) >> 1) & ^1)
			switch {
			case data[p] < _syslog_rfc5424_trans_keys[_mid]:
				_upper = _mid - 2
			case data[p] > _syslog_rfc5424_trans_keys[_mid + 1]:
				_lower = _mid + 2
			default:
				_trans += int((_mid - int(_keys)) >> 1)
				goto _match
			}
		}
		_trans += _klen
	}

_match:
	_trans = int(_syslog_rfc5424_indicies[_trans])
	cs = int(_syslog_rfc5424_trans_targs[_trans])

	if _syslog_rfc5424_trans_actions[_trans] == 0 {
		goto _again
	}

	_acts = int(_syslog_rfc5424_trans_actions[_trans])
	_nacts = uint(_syslog_rfc5424_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		_acts++
		switch _syslog_rfc5424_actions[_acts-1] {
		case 0:
//line parse.rl:55
 mark = p 
		case 1:
//line parse.rl:56
 log.version = atoi(data[mark:p]) 
		case 2:
//line parse.rl:57
 log.priority = atoi(data[mark:p]) 
		case 3:
//line parse.rl:58
 log.hostname = bytesRef(data[mark:p]) 
		case 4:
//line parse.rl:59
 log.appname = bytesRef(data[mark:p]) 
		case 5:
//line parse.rl:60
 log.procID = bytesRef(data[mark:p]) 
		case 6:
//line parse.rl:61
 log.msgID = bytesRef(data[mark:p]) 
		case 7:
//line parse.rl:62

      log.data = &structureData{
        id: data[mark:p],
        properties: make([]Property, 0, 5),
      }
    
		case 8:
//line parse.rl:68
 paramName = data[mark:p] 
		case 9:
//line parse.rl:69
 log.data.properties = append(log.data.properties, Property{paramName,data[mark:p]}) 
		case 10:
//line parse.rl:71

      location := time.UTC
      if data[mark+19] == '.' {
        offset := 1

        if data[p-1] != 'Z' {
          offset = 6
          dir := 1
          if data[p-6] == '-' {
            dir = -1
          }

          location = time.FixedZone(
            "",
            dir * (atoi2(data[p-5:p-3]) * 3600 + atoi(data[p-2:p]) * 60),
          )
        }
        nbytes := ( p - offset - 1 ) - ( mark + 19 )
        for i := mark + 20; i < p-offset; i++ {
          nanosecond = nanosecond*10 + int(data[i]-'0')
        }
        for i := 0; i < 9-nbytes; i++ {
          nanosecond *= 10
        }
      }

      log.timestamp = time.Date(
        atoi4(data[mark:mark+4]),
        time.Month(atoi2(data[mark+5:mark+7])),
        atoi2(data[mark+8:mark+10]),
        atoi2(data[mark+11:mark+13]),
        atoi2(data[mark+14:mark+16]),
        atoi2(data[mark+17:mark+19]),
        nanosecond,
        location,
      ).UTC()
    
//line parse.go:1250
		}
	}

_again:
	if cs == 0 {
		goto _out
	}
	p++
	if p != pe {
		goto _resume
	}
	_test_eof: {}
	if p == eof {
		__acts := _syslog_rfc5424_eof_actions[cs]
		__nacts := uint(_syslog_rfc5424_actions[__acts]); __acts++
		for ; __nacts > 0; __nacts-- {
			__acts++
			switch _syslog_rfc5424_actions[__acts-1] {
			case 0:
//line parse.rl:55
 mark = p 
			case 11:
//line parse.rl:108
 log.message = data[mark:p] 
//line parse.go:1275
			}
		}
	}

	_out: {}
	}

//line parse.rl:113


  if cs < syslog_rfc5424_first_final {
    return nil, fmt.Errorf("error in msg at pos %d: %s", p, data)
  }

  return log, nil
}
